set(_FAILED_FILES)
foreach(file @FILES_TO_FORMAT@)
  execute_process(COMMAND @CLANG_FORMAT_EXE@ ${file}
    COMMAND @GIT_EXE@ diff --no-index -- ${file} -
    RESULT_VARIABLE _RESULT
    OUTPUT_VARIABLE _STDOUT
    ERROR_VARIABLE _STDERR
  )

  if(NOT _RESULT EQUAL 0)
    list(APPEND _FAILED_FILES ${file})
  endif()
endforeach()

if(NOT _FAILED_FILES)
  message("libCellML source code is 'clang-format' formatted.")
else()
  message("libCellML source code is incorrectly formatted.")
  list(LENGTH _FAILED_FILES _FAILED_FILES_COUNT)
  if(NOT _FAILED_FILES_COUNT EQUAL 1)
    set(PLURAL "s")
  endif()
  message("Failed file${PLURAL}:")
  foreach(_FAILED_FILE ${_FAILED_FILES})
    message(" - ${_FAILED_FILE}")
  endforeach()
endif()
